"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConsoleEnum = void 0;
var ConsoleEnum;
(function (ConsoleEnum) {
    ConsoleEnum["log"] = "log";
    ConsoleEnum["warn"] = "warn";
    ConsoleEnum["info"] = "info";
    ConsoleEnum["error"] = "error";
})(ConsoleEnum = exports.ConsoleEnum || (exports.ConsoleEnum = {}));
// console configure here
const _privateLog = console.log;
const _privateWarn = console.warn;
const _privateInfo = console.info;
const _privateError = console.error;
const consoleHijacker = (_action) => {
    console.log = function (...message) {
        try {
            _action.Log({
                type: ConsoleEnum.log,
                message: message,
                createdAt: new Date()
            });
        }
        catch (_) {
            console.debug('Custom log function failed:', _.message);
        }
        _privateLog(`[${new Date().toLocaleString()}] -> `, ...message);
    };
    console.warn = function (...message) {
        try {
            _action.Warn({
                type: ConsoleEnum.warn,
                message: message,
                createdAt: new Date()
            });
        }
        catch (_) {
            console.debug('Custom warn function failed:', _.message);
        }
        _privateWarn(`\x1b[33m[${new Date().toLocaleString()}] -> \x1b[0m`, ...message);
    };
    console.info = function (...message) {
        try {
            _action.Info({
                type: ConsoleEnum.info,
                message: message,
                createdAt: new Date()
            });
        }
        catch (_) {
            console.debug('Custom info function failed:', _.message);
        }
        _privateInfo(`\x1b[35m[${new Date().toLocaleString()}] -> \x1b[0m`, ...message);
    };
    console.error = function (...message) {
        try {
            _action.Error({
                type: ConsoleEnum.error,
                message: message,
                createdAt: new Date()
            });
        }
        catch (_) {
            console.debug('Custom error function failed:', _.message);
        }
        _privateError(`\x1b[31m[${new Date().toLocaleString()}] -> \x1b[0m`, ...message);
    };
};
exports.default = consoleHijacker;
