"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const console_interface_1 = require("./console.interface");
// console configure here
const _privateLog = console.log;
const _privateWarn = console.warn;
const _privateInfo = console.info;
const _privateError = console.error;
const consoleHijacker = (_action) => {
    console.log = function (...message) {
        try {
            _action.Log({
                type: console_interface_1.ConsoleEnum.log,
                message: message,
                createdAt: new Date()
            });
        }
        catch (_) {
            console.debug('Custom log function failed:', _.message);
        }
        _privateLog(`[${new Date().toLocaleString()}] -> `, ...message);
    };
    console.warn = function (...message) {
        try {
            _action.Warn({
                type: console_interface_1.ConsoleEnum.warn,
                message: message,
                createdAt: new Date()
            });
        }
        catch (_) {
            console.debug('Custom warn function failed:', _.message);
        }
        _privateWarn(`\x1b[33m[${new Date().toLocaleString()}] -> \x1b[0m`, ...message);
    };
    console.info = function (...message) {
        try {
            _action.Info({
                type: console_interface_1.ConsoleEnum.info,
                message: message,
                createdAt: new Date()
            });
        }
        catch (_) {
            console.debug('Custom info function failed:', _.message);
        }
        _privateInfo(`\x1b[35m[${new Date().toLocaleString()}] -> \x1b[0m`, ...message);
    };
    console.error = function (...message) {
        try {
            _action.Error({
                type: console_interface_1.ConsoleEnum.error,
                message: message,
                createdAt: new Date()
            });
        }
        catch (_) {
            console.debug('Custom error function failed:', _.message);
        }
        _privateError(`\x1b[31m[${new Date().toLocaleString()}] -> \x1b[0m`, ...message);
    };
};
exports.default = consoleHijacker;
